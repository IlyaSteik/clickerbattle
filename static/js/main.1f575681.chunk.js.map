{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","props","state","activePanel","popout","login","bind","componentDidMount","connect","send","this","setState","setTimeout","socket","openSocket","secure","on","json","window","location","search","replace","msg","method","access","console","log","id","style","display","stretched","height","borderRadius","boxShadow","marginLeft","marginTop","backgroundColor","marginRight","React","Component","App","useState","setActivePanel","fetchedUser","setUser","size","setPopout","useEffect","a","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","go","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"6tBA0EeA,E,YA5Dd,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACZC,YAAa,OACbC,OAAQ,MAGT,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBAEzBE,IAAQC,KAAK,eAAgB,IAXX,E,iFAcG,IAAD,OACpBC,KAAKC,SAAS,CAAEP,OAAQ,kBAAC,IAAD,QACxBQ,YAAW,WAAQ,EAAKP,UAAW,O,8BAInC,IAAMQ,EAASC,IAAWN,QAAQ,wCAAyC,CAACO,QAAQ,IACpFF,EAAOG,GAAG,UAAW,WACpBH,EAAOI,KAAKR,KAAK,CAAC,OAAU,QAAQ,IAAOS,OAAOC,SAASC,OAAOC,QAAQ,IAAI,MAC9ER,EAAOG,GAAG,UAAW,SAAUM,GACZ,UAAfA,EAAIC,QACHD,EAAIE,QACNd,KAAKC,SAAS,CAAEP,OAAQ,OAG1BqB,QAAQC,IAAIJ,IACXhB,KAAKI,QACNJ,KAAKI,S,+BAKP,OACC,kBAAC,IAAD,CAAMN,OAAQM,KAAKR,MAAME,QACxB,kBAAC,IAAD,CAAMD,YAAaO,KAAKR,MAAMC,aAC7B,kBAAC,IAAD,CAAOwB,GAAG,QACT,kBAAC,IAAD,eACA,kBAAC,IAAD,CAAKC,MAAO,CAACC,QAAS,SAErB,kBAAC,IAAD,CAAQC,WAAS,EAACF,MAAO,CAACG,OAAQ,OAAQC,aAAc,OAAQC,UAAW,kCAAmCC,WAAY,OAAQC,UAAW,OAAQC,gBAAiB,YAAtK,YACA,kBAAC,IAAD,CAAQN,WAAS,EAACF,MAAO,CAACG,OAAQ,OAAQC,aAAc,OAAQC,UAAW,kCAAmCC,WAAY,OAAQC,UAAW,OAAQC,gBAAiB,YAAtK,YACA,kBAAC,IAAD,CAAQN,WAAS,EAACF,MAAO,CAACG,OAAQ,OAAQC,aAAc,OAAQC,UAAW,kCAAmCC,WAAY,OAAQG,YAAa,OAAQF,UAAW,OAAQC,gBAAiB,YAA3L,oB,GA/CYE,IAAMC,WC4BVC,EAhCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVtC,EADU,KACGuC,EADH,OAEcD,mBAAS,MAFvB,mBAEVE,EAFU,KAEGC,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAHxC,mBAGVzC,EAHU,KAGF0C,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBxC,IAAQyC,YAAY,uBADxC,OACOC,EADP,OAECN,EAAQM,GACRJ,EAAU,MAHX,4CARe,sBACftC,IAAQ2C,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACpC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAMH,OACC,kBAAC,IAAD,CAAM5D,YAAaA,EAAaC,OAAQA,GACvC,kBAAC,EAAD,CAAMuB,GAAG,OAAOgB,YAAaA,EAAaqB,GANjC,SAAAC,GACVvB,EAAeuB,EAAEC,cAAcC,QAAQC,SCrBzC5D,IAAQC,KAAK,gBAQb4D,IAASC,OAAO,kBAAC,EAAD,MAASd,SAASe,eAAe,W","file":"static/js/main.1f575681.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport connect from '@vkontakte/vk-connect';\n\nimport openSocket from 'socket.io-client';\n\nclass Home extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\n\t\tthis.state = {\n\t\t\tactivePanel: 'main',\n\t\t\tpopout: null\n\t\t};\n\n\t\tthis.login = this.login.bind(this);\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t\t\n\t\tconnect.send(\"VKWebAppInit\", {});\n\t}\n\t\n\tcomponentDidMount () {\n\t\tthis.setState({ popout: <ScreenSpinner /> });\n\t\tsetTimeout(() => { this.login() }, 100);\n\t}\n\t\n\tlogin() {\n\t\tconst socket = openSocket.connect('https://ih1705413.vds.myihor.ru:8080/', {secure: true});\n\t\tsocket.on('connect', function () {\n\t\t\tsocket.json.send({'method': 'login','url': window.location.search.replace('?','')});\n\t\t\tsocket.on('message', function (msg) {\n\t\t\t\tif(msg.method === 'login'){\n\t\t\t\t\tif(msg.access){\n\t\t\t\t\t\tthis.setState({ popout: null });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(msg);\n\t\t\t}.bind(this));\n\t\t}.bind(this));\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<View popout={this.state.popout}>\n\t\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t\t<Panel id=\"main\">\n\t\t\t\t\t\t<PanelHeader>VK App</PanelHeader>\n\t\t\t\t\t\t<Div style={{display: 'flex'}}>\n\n\t\t\t\t\t\t\t<Button stretched style={{height: \"75px\", borderRadius: \"22px\", boxShadow: \"0 0px 30px 0 rgba(0, 0, 0, 0.3)\", marginLeft: \"12px\", marginTop: \"18px\", backgroundColor: \"#2196f3\"}}>Button 1</Button>\n\t\t\t\t\t\t\t<Button stretched style={{height: \"75px\", borderRadius: \"22px\", boxShadow: \"0 0px 30px 0 rgba(0, 0, 0, 0.3)\", marginLeft: \"12px\", marginTop: \"18px\", backgroundColor: \"#ffc107\"}}>Button 2</Button>\n\t\t\t\t\t\t\t<Button stretched style={{height: \"75px\", borderRadius: \"22px\", boxShadow: \"0 0px 30px 0 rgba(0, 0, 0, 0.3)\", marginLeft: \"12px\", marginRight: \"12px\", marginTop: \"18px\", backgroundColor: \"#4caf50\"}}>Button 3</Button>\n\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}