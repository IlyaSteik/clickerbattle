{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["redBackground","backgroundColor","Home","props","state","activePanel","popout","snackbar","user_id","bots","activeStory","openBase","bind","login","getBots","componentDidMount","onStoryChange","connect","send","this","setState","setTimeout","sendPromise","then","data","id","catch","error","console","log","socket","openSocket","secure","on","json","window","location","search","replace","msg","axios","method","url","params","headers","responseType","response","error_msg","fill","width","height","text","image","style","layout","onClose","before","size","e","currentTarget","dataset","story","tabbar","onClick","selected","data-story","title","component","href","Object","keys","length","map","value","i","src","photo","React","Component","App","useState","setActivePanel","fetchedUser","setUser","setPopout","useEffect","a","user","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","go","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.36e7ae95.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Placeholder from '@vkontakte/vkui/dist/components/Placeholder/Placeholder';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Snackbar from '@vkontakte/vkui/dist/components/Snackbar/Snackbar';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout';\nimport Input from '@vkontakte/vkui/dist/components/Input/Input';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport List from '@vkontakte/vkui/dist/components/List/List';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport CellButton from '@vkontakte/vkui/dist/components/CellButton/CellButton';\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem';\n\nimport axios from 'axios';\nimport WebSocket from 'websocket';\nimport connect from '@vkontakte/vk-connect';\n\nimport Icon56InfoOutline from '@vkontakte/icons/dist/56/info_outline';\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel';\nimport Icon24User from '@vkontakte/icons/dist/24/user';\nimport Icon24Reply from '@vkontakte/icons/dist/24/reply';\nimport Icon16Add from '@vkontakte/icons/dist/16/add';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\n\nimport openSocket from 'socket.io-client';\n\nconst blueBackground = {\n  backgroundColor: 'var(--accent)'\n};\n\nconst redBackground = {\n  backgroundColor: 'var(--dynamic_red)'\n};\n\nclass Home extends React.Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\n\t\tthis.state = {\n\t\t\tactivePanel: 'main',\n\t\t\tpopout: null,\n\t\t\tsnackbar: null,\n\t\t\tuser_id: 0,\n\t\t\tbots: [],\n\t\t\tactiveStory: 'feed',\n\t\t};\n\t\t\n\t\tthis.openBase = this.openBase.bind(this);\n\t\tthis.login = this.login.bind(this);\n\t\tthis.getBots = this.getBots.bind(this);\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t\t\n\t\tconnect.send(\"VKWebAppInit\", {});\n\t}\n\t\n\tcomponentDidMount () {\n\t\tthis.setState({ popout: <ScreenSpinner /> });\n\t\tsetTimeout(() => { this.login() }, 100);\n\t}\n\t\n\tlogin() {\n\t\tconnect.sendPromise(\"VKWebAppGetUserInfo\", {})\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({ user_id: data.id });\n\t\t\t\tthis.getBots();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t\tthis.setState({ popout: null });\n\t\t\t});\n\n\t\tconst socket = openSocket.connect('https://193.124.188.159:8080', {secure: true});\n\t\tsocket.on('connect', function () {\n\t\t\tsocket.json.send({'method': 'params','params': window.location.search.replace('?','')});\n\t\t\tsocket.on('message', function (msg) {\n\t\t\t\tconsole.log(msg);\n\t\t\t});\n\t\t});\n\t}\n\t\n\tgetBots () {\n\t\taxios({\n\t\t\tmethod: 'get',\n\t\t\turl: \"https://bots-vk-api.herokuapp.com/api\",\n\t\t\tparams: {\n\t\t\t\tmethod: 'getBots',\n\t\t\t\tuser_id: this.state.user_id\n\t\t\t},\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tresponseType: 'json'\n\t\t}).then(function (response) {\n\t\t\tvar error = response.data.error;\n\t\t\tconsole.log(response.data);\n\t\t\tif(error){\n\t\t\t\tthis.openBase(response.data.error_msg, <Icon16Cancel fill=\"#fff\" width={14} height={14} />, redBackground);\n\t\t\t}else{\n\t\t\t\tthis.setState({ bots: response.data.bots });\n\t\t\t}\n\t\t\tthis.setState({ popout: null });\n\t\t}.bind(this));\n\t}\n\t\n\topenBase (text, image, style) {\n\t\tthis.setState({ snackbar: null });\n\t\tthis.setState({ snackbar:\n\t\t<Snackbar\n\t\t\tlayout=\"vertical\"\n\t\t\tonClose={() => this.setState({ snackbar: null })}\n\t\t\tbefore={<Avatar size={24} style={style}>{image}</Avatar>}\n\t\t>\n\t\t{text}\n\t\t</Snackbar>\n\t\t});\n\t}\n\t\n\tget bots () {\n\t\tif(this.state.bots===null || Object.keys(this.state.bots).length===0 ){\n\t\t\treturn ;\n\t\t}else{\n\t\t\treturn this.state.bots.map((value, i) => \n\t\t\t\t<Cell before={<Avatar src={value.photo} />}>{value.title}</Cell>\n\t\t\t);\n\t\t}\n\t}\n\t\n\tonStoryChange (e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t<Epic popout={this.state.popout} activeStory={this.state.activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'feed'}\n            data-story=\"feed\"\n            text=\"Новости\"\n          ><Icon28Newsfeed /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'notifications'}\n            data-story=\"notifications\"\n            text=\"Уведомлен.\"\n          ><Icon28Notifications /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'more'}\n            data-story=\"more\"\n            text=\"Ещё\"\n          ><Icon28More /></TabbarItem>\n        </Tabbar>\n      }>\n        <View id=\"feed\" activePanel=\"feed\">\n          <Panel id=\"feed\">\n            <PanelHeader>Feed</PanelHeader>\n\t\t\t<Group title=\"Боты\">\n\t\t\t\t\t<List>\n\t\t\t\t\t\t<Cell before={<Icon16Add/>} component=\"a\" href='https://vk.com/im?media=&sel=-189298925' >Добавить бота</Cell>\n\t\t\t\t\t\t{this.bots}\n\t\t\t\t\t</List>\n\t\t\t</Group>\n\t\t\t\t\n\t\t\t{this.state.snackbar}\n          </Panel>\n        </View>\n        <View id=\"notifications\" activePanel=\"notifications\">\n          <Panel id=\"notifications\">\n            <PanelHeader>Notifications</PanelHeader>\n          </Panel>\n        </View>\n        <View id=\"more\" activePanel=\"more\">\n          <Panel id=\"more\">\n            <PanelHeader>More</PanelHeader>\n          </Panel>\n        </View>\n      </Epic>\n\t\t\n\t\t);\n\t}\n}\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}